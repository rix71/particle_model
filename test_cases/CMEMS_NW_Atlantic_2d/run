#==================================
clear
echo "===================="
echo "North-West Atlantic Shelf test case"
echo "===================="
#======================================================================
# RUNNING THE MODEL
#======================================================================
#==================================
export OMP_NUM_THREADS=16
#==================================
# Namelist variables
export runid="NWA2d"

# 2D/3D
export run_3d=False

# Dry run
export dry_run=False

# Hydrodynamic data
export getmpath="${PWD}/data/hydro"
export topofile="${PWD}/data/topo/topo.nc"


# Hydrodynamic data variables
export lonvarname="lon"
export latvarname="lat"
export uvarname="uo"
export vvarname="vo"
export zaxvarname="depth"

# Model domain
export nx=297
export ny=375
export nlevels=1
export has_subdomains=False
export zax_style=1

# Advetion + buoyancy
export do_velocity=True

# Diffusion
export do_diffusion=True
export cm_smagorinsky=0.3

# Resuspension
export resuspension_coeff=0.0

# Biofouling
export do_biofouling=False

# Boundary interactions
export kill_beached=True
export kill_boundary=True

# Time
# Start and end dates for each run are set below
export dt=60.

# Input
export particle_init_method=1
export coordfile="${PWD}/data/input/init_particles_full.dat"
# in_hours=12
# export inputstep=`python3 -c "print(int($in_hours*3600./$dt))"`
export inputstep=999999999

# Output
out_hours=0.5
export outputstep=`python3 -c "print(int($out_hours*3600./$dt))"`
export write_all_particles=True
export write_snapshot=False

# Restart
# Restart variable is set below
# Write at the end of the run (default in namelist template)
# restart_hours=1440
# export restartstep=`python3 -c "print(int($restart_hours*3600./$dt))"`
#==================================
#--------------------
RUN_DIR=${PWD}
BASE_DIR=${RUN_DIR}/../..
NML_PATH=${BASE_DIR}/nml
#--------------------
MODEL_DIR=${BASE_DIR}/bin
MODEL_BIN=${MODEL_DIR}/main
#--------------------
OUT_BASE_DIR="${RUN_DIR}/out"
#--------------------
# Entire simulation period
sim_start="2022-06-02"
sim_end="2022-06-05"
#--------------------
step_days=3
#--------------------
date_start=$(date -I -d "$sim_start")
date_end=$(date -I -d "$sim_end")
dateval=$date_start
#--------------------
# Start of the run
first_run=True
num_run=0
#--------------------
echo "===================="
echo "Running model:"
${MODEL_BIN} -c
#--------------------
# Set timer
tic=$(date +%s)
#--------------------
while [ $(date -d "$dateval" +%s) -lt $(date -d "$date_end" +%s) ]; do
    #--------------------
    num_run=$((num_run+1))
    echo "===================="
    echo "This is run number $num_run"
    echo "Date: $dateval"
    #--------------------
    # Set run start and end dates
    export run_start=$dateval' 00:00:00'
    export run_end=$(date -I -d "$dateval+$step_days day")' 00:00:00'
    #--------------------
    echo "The model is running from $run_start to $run_end"
    #--------------------
    # Set output directory
    YYYYMMDD=$(date -d "$run_start" +%Y%m%d)
    export outdir="${OUT_BASE_DIR}/${YYYYMMDD}"
    echo "Making output directory: $outdir"
    mkdir -p ${outdir}
    #--------------------
    if [ "$first_run" = True ]; then
        first_run=False
        export restart=False
    else
        # Copy restart file from previous run
        echo "Moving restart file to the next folder..."
        mv ${outdir_prev}/*${YYYYMMDD}*restart* ${outdir}/.
        err=$?
        if [ $err -ne 0 ]; then
            echo "===================="
            echo "ERROR: Restart file not found"
            echo "===================="
            exit 1
        fi
        export inputstep=0 # No input after the first run
        export restart=True
        export restart_path="${outdir}"
    fi
    #--------------------
    outdir_prev=$outdir
    #--------------------
    # Make namelists
    ${NML_PATH}/makenamelist.py -i ${NML_PATH}/nmltemplate
    cp input.inp ${outdir}/.
    #--------------------
    # Run model
    echo "Running model..."
    tic_m=$(date +%s)
    ${MODEL_BIN}
    err=$?
    toc_m=$(date +%s)
    #--------------------
    if [ $err -ne 0 ]; then
        echo "===================="
        echo "ERROR: Model run failed"
        echo "===================="
        exit 1
    fi
    #--------------------
    echo "Model run number ${num_run} finished"
    echo "Model wall time: $((toc_m-tic_m)) seconds" 
    echo "===================="
    #--------------------
    # Copy output
    echo "Copying output to run folder..."
    cp ${runid}.stdout ${outdir}/.
    #--------------------
    dateval=$(date -I -d "$dateval+$step_days day")
done
toc=$(date +%s)
echo "===================="
echo "All finished!"
echo "Total time: $((toc-tic)) seconds"
echo "===================="

#======================================================================
# PLOTTING THE RESULTS
#======================================================================
clear
mkdir -p ${OUT_BASE_DIR}/counts
for d in $( ls -d ${OUT_BASE_DIR}/2* ); do
    echo "Calculating counts in $d"
    python3 calculate_counts.py -np 8 -s $d/${runid}.out.nc -o ${OUT_BASE_DIR}/counts/counts.$(basename $d).nc --topo-file ${topofile}
done
mkdir -p ${OUT_BASE_DIR}/figs
python3 plot_counts.py -s ${OUT_BASE_DIR}/counts/counts.*.nc -o ${OUT_BASE_DIR}/figs

echo "===================="
echo "All finished!"
echo "===================="